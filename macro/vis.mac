#/control/verbose 2
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#/vis/open RayTracerX 1200x600-0+0

# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
# Draw geometry:
#/vis/viewer/zoom 16
/vis/drawVolume

# Set Up Vector
/vis/viewer/set/upVector 0 1 0

#/vis/viewer/set/viewpointThetaPhi 300. 90.
/vis/viewer/set/viewpointVector 0 0 1
/vis/viewer/set/targetPoint 450 0 0 mm

# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 500 mm

# Specify style (surface or wireframe):
#/vis/viewer/set/style surface
/vis/viewer/set/style cloud
/vis/geometry/set/colour all 0 1 1 1 0.2
/vis/geometry/set/visibility WorldLogicalVolume 0 false
/vis/geometry/set/colour PScintLogicalVolume 0 0 0 1 0.1
/vis/geometry/set/colour WholePSLogicalVolume 0 1 0 0 0.1
/vis/geometry/set/colour InteriorLogicalVolume 0 0 1 0 0.1
#/vis/geometry/set/visibility GrooveLogicalVolume 0 false
/vis/geometry/set/colour FiberCladdingLogicalVolume 0 1 1 0 1
#/vis/geometry/set/colour shell_log 0 1 0 0 0.6
#/vis/geometry/set/colour fiber_log_0 1 0 0 0 0.6
#/vis/geometry/set/colour fiber_log_1 1 0 0 0 0.6
#/vis/geometry/set/colour fiber_log_2 1 0 0 0 0.6
#/vis/geometry/set/colour fiber_log_3 1 0 0 0 0.6



# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2

# Draw hits at end of event:
/vis/scene/add/hits

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
/vis/viewer/flush
#
# Set visualization to accumulate events into one picture
#
/vis/scene/endOfEventAction accumulate
